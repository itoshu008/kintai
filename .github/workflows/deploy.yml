name: Deploy to Server

on:
  push:
    branches:
      - main
      - staging
  workflow_dispatch:

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    environment: production
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci && cd ..
          cd frontend && npm ci && cd ..

      - name: Build application
        run: |
          cd backend && npm run build && cd ..
          cd frontend && npm run build && cd ..

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to production server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd ${{ secrets.DEPLOY_PATH }} &&
            git fetch origin &&
            git reset --hard origin/main &&
            npm ci &&
            cd backend && npm ci && npm run build && cd .. &&
            cd frontend && npm ci && npm run build && cd .. &&
            pm2 restart all &&
            pm2 logs --lines 10
          '

      - name: Health check
        run: |
          sleep 10
          curl -f http://${{ secrets.SSH_HOST }}:8000/api/admin/backups/health || exit 1

  deploy-to-staging:
    runs-on: ubuntu-latest
    environment: staging
    if: github.ref == 'refs/heads/staging'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          cd backend && npm ci && cd ..
          cd frontend && npm ci && cd ..

      - name: Build application
        run: |
          cd backend && npm run build && cd ..
          cd frontend && npm run build && cd ..

      - name: Set up SSH key
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to staging server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} '
            cd ${{ secrets.STAGING_DEPLOY_PATH }} &&
            git fetch origin &&
            git reset --hard origin/staging &&
            npm ci &&
            cd backend && npm ci && npm run build && cd .. &&
            cd frontend && npm ci && npm run build && cd .. &&
            pm2 restart staging-backend &&
            pm2 logs --lines 10
          '

      - name: Health check
        run: |
          sleep 10
          curl -f http://${{ secrets.SSH_HOST }}:8001/api/admin/backups/health || exit 1

  notify:
    runs-on: ubuntu-latest
    needs: [deploy-to-production, deploy-to-staging]
    if: always()

    steps:
      - name: Notify deployment status
        run: |
          if [ "${{ needs.deploy-to-production.result }}" == "success" ] || [ "${{ needs.deploy-to-staging.result }}" == "success" ]; then
            echo "✅ Deployment successful!"
          else
            echo "❌ Deployment failed!"
          fi
