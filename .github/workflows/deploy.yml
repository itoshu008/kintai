name: Deploy to VPS (SSH)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    concurrency:
      group: prod-deploy
      cancel-in-progress: false
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          port: ${{ secrets.VPS_PORT }}
          request_pty: true
          envs: SUDO_PASS
          script: |
            set -Eeuo pipefail

            APP_DIR="/home/zatint1991-hvt55/zatint1991.com"
            BACKEND_DIR="$APP_DIR/backend"
            FRONTEND_DIR="$APP_DIR/frontend"
            PUBLIC_DIR="$APP_DIR/public/admin-dashboard-2024"  # 必要なら /kintai に
            BUILD_USER="itoshu"
            PM2_APP="kintai-api"
            HOST="127.0.0.1"
            PORT="8001"

            echo "👤 fix perms (including .git)"
            echo "$SUDO_PASS" | sudo -S chown -R itoshu:itoshu "$APP_DIR" "/home/itoshu/.npm" "/home/itoshu/.pm2"
            echo "$SUDO_PASS" | sudo -S chown -R itoshu:itoshu "$APP_DIR/.git" || true
            find "$APP_DIR" -type d -exec chmod 775 {} \; ; find "$APP_DIR" -type f -exec chmod 664 {} \;

            echo "🌿 git sync"
            cd "$APP_DIR"
            if [ -d .git ]; then
              git config --global --add safe.directory "$APP_DIR" || true
              git fetch --all -p
              git reset --hard origin/main
              git clean -fdx
            else
              echo "⚠️ .git がありません（サーバにコピー配置方式ならここは無視）"
            fi

            echo "🧱 backend build"
            cd "$BACKEND_DIR"
            if [ -f package-lock.json ]; then
              npm ci --no-fund --no-audit || npm install --no-fund --no-audit
            else
              npm install --no-fund --no-audit
            fi
            npm run build

            echo "🚀 pm2 restart"
            pm2 delete "$PM2_APP" 2>/dev/null || true
            HOST="$HOST" PORT="$PORT" NODE_ENV=production pm2 start "$BACKEND_DIR/dist/server.js" --name "$PM2_APP" --update-env
            pm2 save

            echo "🩺 health (60s)"
            ok=""
            for i in $(seq 1 30); do
              if curl -fsS "http://$HOST:$PORT/api/admin/health" >/dev/null; then
                echo "✅ Backend OK"; ok="yes"; break
              fi
              echo "  waiting... ($i/30)"; sleep 2
            done
            [ -z "$ok" ] && { echo "❌ Backend NG"; exit 1; }

            echo "🎨 frontend build"
            cd "$FRONTEND_DIR"
            if [ -f package-lock.json ]; then
              npm ci --no-fund --no-audit || npm install --no-fund --no-audit
            else
              npm install --no-fund --no-audit
            fi
            npm run build

            echo "🚚 publish"
            mkdir -p "$PUBLIC_DIR"
            rsync -az --delete "dist/" "$PUBLIC_DIR/"

            echo "🌀 nginx reload"
            echo "$SUDO_PASS" | sudo -S nginx -t && echo "$SUDO_PASS" | sudo -S systemctl reload nginx || echo "⚠️ nginx reload skipped"

            echo "🔎 verify"
            curl -I "https://zatint1991.com/kintai/" | sed -n '1,6p'
            curl -fsS "http://$HOST:$PORT/api/admin/health" && echo "✅ deploy done"
