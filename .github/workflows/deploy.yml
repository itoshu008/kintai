name: Deploy to VPS (Debug)
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      APP_DIR: /home/zatint1991-hvt55/zatint1991.com
      BACKEND_DIR: /home/zatint1991-hvt55/zatint1991.com/backend
      FRONTEND_DIR: /home/zatint1991-hvt55/zatint1991.com/frontend
      PUBLIC_DIR: /home/zatint1991-hvt55/zatint1991.com/public/admin-dashboard-2024
      PM2_APP: kintai-api
      PM2_USER: itoshu
      PORT: "8001"
      NODE_ENV: production
      DEPLOY_USER: ${{ secrets.VPS_USER }}
      BUILD_USER: itoshu
      VPS_HOST: ${{ secrets.VPS_HOST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Debug environment
        run: |
          echo "üîç Debug environment variables:"
          echo "VPS_HOST: $VPS_HOST"
          echo "BUILD_USER: $BUILD_USER"
          echo "APP_DIR: $APP_DIR"
          echo "BACKEND_DIR: $BACKEND_DIR"
          echo "FRONTEND_DIR: $FRONTEND_DIR"
          echo "PUBLIC_DIR: $PUBLIC_DIR"
          echo "PM2_APP: $PM2_APP"
          echo "PORT: $PORT"

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add host key
        run: |
          echo "üîë Setting up SSH host key..."
          mkdir -p ~/.ssh
          ssh-keygen -R "$VPS_HOST" 2>/dev/null || true
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          echo "‚úÖ SSH host key configured"

      - name: Test SSH connection
        run: |
          echo "üîç Testing SSH connection..."
          ssh -o ConnectTimeout=30 "$BUILD_USER@$VPS_HOST" "echo 'SSH connection successful'"
          echo "‚úÖ SSH connection verified"

      - name: Check VPS status
        run: |
          echo "üîç Checking VPS status..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          echo "=== VPS Status ==="
          echo "Current user: \$(whoami)"
          echo "Current directory: \$(pwd)"
          echo "Disk usage:"
          df -h | head -5
          echo "Memory usage:"
          free -h
          echo "PM2 status:"
          pm2 status || echo "PM2 not running"
          echo "Nginx status:"
          sudo systemctl status nginx --no-pager || echo "Nginx not running"
          echo "Port $PORT status:"
          ss -tlnp | grep ":$PORT " || echo "Port $PORT not listening"
          EOF

      - name: Check directories
        run: |
          echo "üîç Checking directories..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          echo "=== Directory Check ==="
          echo "APP_DIR: $APP_DIR"
          ls -la "$APP_DIR" || echo "APP_DIR not found"
          echo "BACKEND_DIR: $BACKEND_DIR"
          ls -la "$BACKEND_DIR" || echo "BACKEND_DIR not found"
          echo "FRONTEND_DIR: $FRONTEND_DIR"
          ls -la "$FRONTEND_DIR" || echo "FRONTEND_DIR not found"
          echo "PUBLIC_DIR: $PUBLIC_DIR"
          ls -la "$PUBLIC_DIR" || echo "PUBLIC_DIR not found"
          EOF

      - name: Deploy backend (with timeout)
        run: |
          echo "üöÄ Deploying backend..."
          timeout 300 ssh "$BUILD_USER@$VPS_HOST" <<EOF
          set -e
          cd "$BACKEND_DIR"
          echo "Installing backend dependencies..."
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          echo "Building backend..."
          npm run build
          echo "Restarting PM2..."
          pm2 restart "$PM2_APP" || pm2 start dist/index.js --name "$PM2_APP"
          echo "‚úÖ Backend deployed"
          EOF

      - name: Deploy frontend (with timeout)
        run: |
          echo "üé® Deploying frontend..."
          timeout 300 ssh "$BUILD_USER@$VPS_HOST" <<EOF
          set -e
          cd "$FRONTEND_DIR"
          echo "Installing frontend dependencies..."
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          echo "Building frontend..."
          npm run build
          echo "Publishing frontend..."
          sudo mkdir -p "$PUBLIC_DIR"
          rsync -az --delete dist/ "$PUBLIC_DIR/"
          sudo chown -R itoshu:itoshu "$PUBLIC_DIR"
          echo "‚úÖ Frontend deployed"
          EOF

      - name: Update nginx config
        run: |
          echo "‚öôÔ∏è Updating nginx config..."
          scp nginx-zatint1991-final.conf "$BUILD_USER@$VPS_HOST:/tmp/nginx-zatint1991.conf"
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          sudo cp /tmp/nginx-zatint1991.conf /etc/nginx/sites-enabled/zatint1991.com
          sudo nginx -t
          sudo systemctl reload nginx
          echo "‚úÖ nginx config updated"
          EOF

      - name: Health check
        run: |
          echo "üè• Running health check..."
          sleep 10
          for i in {1..10}; do
            echo "Health check attempt $i/10..."
            if curl -f --connect-timeout 10 "http://$VPS_HOST:$PORT/api/admin/health"; then
              echo "‚úÖ Health check passed"
              break
            else
              echo "‚è≥ Waiting for service... ($i/10)"
              sleep 10
            fi
          done

      - name: Final verification
        run: |
          echo "üîç Final verification..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          echo "=== Final Status ==="
          echo "PM2 status:"
          pm2 status
          echo "Nginx status:"
          sudo systemctl status nginx --no-pager
          echo "Port $PORT status:"
          ss -tlnp | grep ":$PORT " || echo "Port $PORT not listening"
          echo "Frontend files:"
          ls -la "$PUBLIC_DIR" | head -10
          EOF
