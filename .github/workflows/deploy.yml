name: Deploy to VPS
on:
  push:
    branches: [ main ]
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      APP_DIR: /home/zatint1991-hvt55/zatint1991.com
      BACKEND_DIR: /home/zatint1991-hvt55/zatint1991.com/backend
      FRONTEND_DIR: /home/zatint1991-hvt55/zatint1991.com/frontend
      PUBLIC_DIR: /home/zatint1991-hvt55/zatint1991.com/public/admin-dashboard-2024
      PM2_APP: kintai-api
      PM2_USER: itoshu
      PORT: "8001"
      NODE_ENV: production

    steps:
      - uses: actions/checkout@v4

      # ★ Nodeを22系に固定（エンジン警告を根本解消）
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.12.0'
          cache: 'npm'
          cache-dependency-path: |
            backend/package-lock.json
            frontend/package-lock.json

      - uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add server to known_hosts
        run: ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

      - name: Rsync sources (backend / frontend only, run as itoshu)
        run: |
          set -e
          RSYNC_OPTS="-az -O --no-perms --no-group --omit-dir-times --delete \
            --exclude '.git' --exclude 'node_modules' \
            --exclude 'backups*/' --exclude 'data*/' \
            --exclude '.public_build*/' --exclude 'public-backup*/' \
            --exclude 'dist-ultimate*/' --exclude 'kintai*/'"

          # mkdirはsudoパスワードが必要になるので無し。rsyncをitoshuで実行して作成させる
          rsync $RSYNC_OPTS ./backend/  ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${BACKEND_DIR}/  --rsync-path="sudo -u itoshu rsync"
          rsync $RSYNC_OPTS ./frontend/ ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }}:${FRONTEND_DIR}/ --rsync-path="sudo -u itoshu rsync"

      - name: Build backend & reload PM2
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} '
            set -e
            cd ${BACKEND_DIR}
            sudo chown -R '"${{ env.PM2_USER }}"':'" ${env.PM2_USER} "' .
            npm install --omit=dev --no-audit --no-fund
            npm run build || true
            PORT='${PORT}' NODE_ENV='${NODE_ENV}' sudo -u '"${{ env.PM2_USER }}"' pm2 reload '"${{ env.PM2_APP }}"' \
              || PORT='${PORT}' NODE_ENV='${NODE_ENV}' sudo -u '"${{ env.PM2_USER }}"' pm2 start dist/index.js --name '"${{ env.PM2_APP }}"'
            sudo -u '"${{ env.PM2_USER }}"' pm2 save
          '

      - name: Build frontend & publish (if exists)
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} '
            set -e
            if [ -d ${FRONTEND_DIR} ]; then
              cd ${FRONTEND_DIR}
              sudo chown -R '"${{ env.PM2_USER }}"':'" ${env.PM2_USER} "' .
              npm install --no-audit --no-fund
              npm run build
              sudo rm -rf ${PUBLIC_DIR}
              sudo mkdir -p ${PUBLIC_DIR}
              sudo chown -R '"${{ env.PM2_USER }}"':'" ${env.PM2_USER} "' ${PUBLIC_DIR}
              rsync -a --delete ${FRONTEND_DIR}/dist/ ${PUBLIC_DIR}/
              sudo nginx -t && sudo systemctl reload nginx
            else
              echo "frontend/ not found. skip."
            fi
          '

      - name: Write deployed commit
        run: |
          ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "echo '${{ github.sha }} $(date -u +%FT%TZ)' | sudo -u itoshu tee ${APP_DIR}/DEPLOYED_SHA.txt >/dev/null"

