name: Deploy to VPS (Robust)
on:
  push:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    env:
      APP_DIR: /home/zatint1991-hvt55/zatint1991.com
      BACKEND_DIR: /home/zatint1991-hvt55/zatint1991.com/backend
      FRONTEND_DIR: /home/zatint1991-hvt55/zatint1991.com/frontend
      PUBLIC_DIR: /home/zatint1991-hvt55/zatint1991.com/public/admin-dashboard-2024
      PM2_APP: kintai-api
      PM2_USER: itoshu
      PORT: "8001"
      NODE_ENV: production
      DEPLOY_USER: ${{ secrets.VPS_USER }}
      BUILD_USER: itoshu
      VPS_HOST: ${{ secrets.VPS_HOST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.VPS_SSH_KEY }}

      - name: Add host key
        run: |
          echo "üîë Setting up SSH host key..."
          mkdir -p ~/.ssh
          ssh-keygen -R "$VPS_HOST" 2>/dev/null || true
          ssh-keyscan -H "$VPS_HOST" >> ~/.ssh/known_hosts
          chmod 600 ~/.ssh/known_hosts
          echo "‚úÖ SSH host key configured"

      - name: Test SSH connection
        run: |
          echo "üîç Testing SSH connection..."
          ssh -o ConnectTimeout=30 "$BUILD_USER@$VPS_HOST" "echo 'SSH connection successful'"
          echo "‚úÖ SSH connection verified"

      - name: Stop existing services
        run: |
          echo "üõë Stopping existing services..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          pm2 stop "$PM2_APP" || echo "PM2 app not running"
          pm2 delete "$PM2_APP" || echo "PM2 app not found"
          echo "‚úÖ Services stopped"
          EOF

      - name: Deploy backend
        run: |
          echo "üöÄ Deploying backend..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          set -e
          cd "$BACKEND_DIR"
          echo "Installing backend dependencies..."
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          echo "Building backend..."
          npm run build
          echo "Starting PM2..."
          pm2 start dist/index.js --name "$PM2_APP" --env production
          echo "‚úÖ Backend deployed"
          EOF

      - name: Wait for backend startup
        run: |
          echo "‚è≥ Waiting for backend to start..."
          sleep 15
          echo "‚úÖ Backend startup wait completed"

      - name: Deploy frontend
        run: |
          echo "üé® Deploying frontend..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          set -e
          cd "$FRONTEND_DIR"
          echo "Installing frontend dependencies..."
          npm ci --no-audit --no-fund || npm install --no-audit --no-fund
          echo "Building frontend..."
          npm run build
          echo "Publishing frontend..."
          sudo mkdir -p "$PUBLIC_DIR"
          rsync -az --delete dist/ "$PUBLIC_DIR/"
          sudo chown -R itoshu:itoshu "$PUBLIC_DIR"
          echo "‚úÖ Frontend deployed"
          EOF

      - name: Update nginx config
        run: |
          echo "‚öôÔ∏è Updating nginx config..."
          scp nginx-zatint1991-final.conf "$BUILD_USER@$VPS_HOST:/tmp/nginx-zatint1991.conf"
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          sudo cp /tmp/nginx-zatint1991.conf /etc/nginx/sites-enabled/zatint1991.com
          sudo nginx -t
          sudo systemctl reload nginx
          echo "‚úÖ nginx config updated"
          EOF

      - name: Basic health check
        run: |
          echo "üè• Running basic health check..."
          sleep 10
          echo "Checking if port is listening..."
          ssh "$BUILD_USER@$VPS_HOST" "ss -tlnp | grep ':$PORT ' || echo 'Port not listening'"
          echo "Checking PM2 status..."
          ssh "$BUILD_USER@$VPS_HOST" "pm2 status"
          echo "‚úÖ Basic health check completed"

      - name: Optional API health check
        run: |
          echo "üîç Optional API health check..."
          for i in {1..3}; do
            echo "API check attempt $i/3..."
            if curl -f --connect-timeout 5 --max-time 10 "http://$VPS_HOST:$PORT/api/admin/health" 2>/dev/null; then
              echo "‚úÖ API health check passed"
              break
            else
              echo "‚è≥ API not ready yet... ($i/3)"
              sleep 5
            fi
          done
          echo "‚úÖ API health check completed (may have failed, but continuing)"

      - name: Final status check
        run: |
          echo "üîç Final status check..."
          ssh "$BUILD_USER@$VPS_HOST" <<EOF
          echo "=== Final Status ==="
          echo "PM2 status:"
          pm2 status
          echo "Nginx status:"
          sudo systemctl status nginx --no-pager | head -10
          echo "Port $PORT status:"
          ss -tlnp | grep ":$PORT " || echo "Port $PORT not listening"
          echo "Frontend files:"
          ls -la "$PUBLIC_DIR" | head -5
          echo "‚úÖ Final status check completed"
          EOF

      - name: Success notification
        run: |
          echo "üéâ Deployment completed successfully!"
          echo "You can now access:"
          echo "- Master page: https://zatint1991.com/kintai/"
          echo "- Personal page: https://zatint1991.com/kintai/personal"
