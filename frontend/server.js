/**
 * „Éï„É≠„É≥„Éà„Ç®„É≥„ÉâÁî®ÈùôÁöÑ„Éï„Ç°„Ç§„É´„Çµ„Éº„Éê„Éº
 * React SPA„Ç¢„Éó„É™„Ç±„Éº„Ç∑„Éß„É≥„ÅÆÈÖç‰ø°„Å®„Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØÊ©üËÉΩ„ÇíÊèê‰æõ
 */
const express = require('express');
const path = require('path');

const app = express();

// Áí∞Â¢ÉÂ§âÊï∞„Åã„ÇâË®≠ÂÆö„ÇíÂèñÂæó
const PORT = process.env.PORT || 8001;
const HOST = process.env.HOST || '127.0.0.1';
const DIST_PATH = path.join(__dirname, 'dist');

// ÈùôÁöÑ„Éï„Ç°„Ç§„É´ÈÖç‰ø°Ë®≠ÂÆö
app.use(express.static(DIST_PATH, {
  index: ['index.html'],
  dotfiles: 'ignore',
  etag: false,
  lastModified: false,
  maxAge: 0 // ÈñãÁô∫Áí∞Â¢É„Åß„ÅØ„Ç≠„É£„ÉÉ„Ç∑„É•„ÇíÁÑ°ÂäπÂåñ
}));

// „Éò„É´„Çπ„ÉÅ„Çß„ÉÉ„ÇØ„Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà
app.get('/health', (req, res) => {
  res.json({ 
    ok: true, 
    service: 'frontend',
    timestamp: new Date().toISOString(),
    port: PORT,
    host: HOST,
    distPath: DIST_PATH
  });
});

// SPA„É´„Éº„ÉÜ„Ç£„É≥„Ç∞ÂØæÂøúÔºà„Åô„Åπ„Å¶„ÅÆ„É´„Éº„Éà„Çíindex.html„Å´„Éï„Ç©„Éº„É´„Éê„ÉÉ„ÇØÔºâ
app.get('*', (req, res) => {
  res.sendFile(path.join(DIST_PATH, 'index.html'));
});

// „Çµ„Éº„Éê„ÉºËµ∑Âãï
const server = app.listen(PORT, HOST, () => {
  console.log(`üåê Frontend server running on http://${HOST}:${PORT}`);
  console.log(`üìÅ Serving static files from: ${DIST_PATH}`);
});

// „Ç∞„É¨„Éº„Çπ„Éï„É´„Ç∑„É£„ÉÉ„Éà„ÉÄ„Ç¶„É≥
process.on('SIGINT', () => {
  console.log('üõë Shutting down frontend server...');
  server.close(() => {
    console.log('‚úÖ Frontend server closed');
    process.exit(0);
  });
});

process.on('SIGTERM', () => {
  console.log('üõë Shutting down frontend server...');
  server.close(() => {
    console.log('‚úÖ Frontend server closed');
    process.exit(0);
  });
});

// „Ç®„É©„Éº„Éè„É≥„Éâ„É™„É≥„Ç∞
process.on('unhandledRejection', (err) => {
  console.error('‚ùå Unhandled Rejection:', err);
  process.exit(1);
});

process.on('uncaughtException', (err) => {
  console.error('‚ùå Uncaught Exception:', err);
  process.exit(1);
});

module.exports = app;

